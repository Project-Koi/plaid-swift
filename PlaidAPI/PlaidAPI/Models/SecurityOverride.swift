//
// SecurityOverride.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

/** Specify the security associated with the holding or investment transaction. When inputting custom security data to the Sandbox, Plaid will perform post-data-retrieval normalization and enrichment. These processes may cause the data returned by the Sandbox to be slightly different from the data you input. An ISO-4217 currency code and a security identifier (&#x60;ticker_symbol&#x60;, &#x60;cusip&#x60;, &#x60;isin&#x60;, or &#x60;sedol&#x60;) are required. */
public struct SecurityOverride: Codable, JSONEncodable, Hashable {

    /** 12-character ISIN, a globally unique securities identifier. A verified CUSIP Global Services license is required to receive this data. This field will be null by default for new customers, and null for existing customers starting March 12, 2024. If you would like access to this field, please [request ISIN/CUSIP access here](https://docs.google.com/forms/d/e/1FAIpQLSd9asHEYEfmf8fxJTHZTAfAzW4dugsnSu-HS2J51f1mxwd6Sw/viewform). */
    public var isin: String?
    /** 9-character CUSIP, an identifier assigned to North American securities. A verified CUSIP Global Services license is required to receive this data. This field will be null by default for new customers, and null for existing customers starting March 12, 2024. If you would like access to this field, please [request ISIN/CUSIP access here](https://docs.google.com/forms/d/e/1FAIpQLSd9asHEYEfmf8fxJTHZTAfAzW4dugsnSu-HS2J51f1mxwd6Sw/viewform). */
    public var cusip: String?
    /** 7-character SEDOL, an identifier assigned to securities in the UK. */
    public var sedol: String?
    /** A descriptive name for the security, suitable for display. */
    public var name: String?
    /** The securityâ€™s trading symbol for publicly traded securities, and otherwise a short identifier if available. */
    public var tickerSymbol: String?
    /** Either a valid `iso_currency_code` or `unofficial_currency_code` */
    public var currency: String?

    public init(isin: String? = nil, cusip: String? = nil, sedol: String? = nil, name: String? = nil, tickerSymbol: String? = nil, currency: String? = nil) {
        self.isin = isin
        self.cusip = cusip
        self.sedol = sedol
        self.name = name
        self.tickerSymbol = tickerSymbol
        self.currency = currency
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case isin
        case cusip
        case sedol
        case name
        case tickerSymbol = "ticker_symbol"
        case currency
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(isin, forKey: .isin)
        try container.encodeIfPresent(cusip, forKey: .cusip)
        try container.encodeIfPresent(sedol, forKey: .sedol)
        try container.encodeIfPresent(name, forKey: .name)
        try container.encodeIfPresent(tickerSymbol, forKey: .tickerSymbol)
        try container.encodeIfPresent(currency, forKey: .currency)
    }
}

