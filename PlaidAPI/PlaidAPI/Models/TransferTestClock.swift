//
// TransferTestClock.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

/** Defines the test clock for a transfer. */
public struct TransferTestClock: Codable, JSONEncodable, Hashable {

    /** Plaidâ€™s unique identifier for a test clock. */
    public var testClockId: String
    /** The virtual timestamp on the test clock. This will be of the form `2006-01-02T15:04:05Z`. */
    public var virtualTime: Date

    public init(testClockId: String, virtualTime: Date) {
        self.testClockId = testClockId
        self.virtualTime = virtualTime
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case testClockId = "test_clock_id"
        case virtualTime = "virtual_time"
    }

    public var additionalProperties: [String: AnyCodable] = [:]

    public subscript(key: String) -> AnyCodable? {
        get {
            if let value = additionalProperties[key] {
                return value
            }
            return nil
        }

        set {
            additionalProperties[key] = newValue
        }
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encode(testClockId, forKey: .testClockId)
        try container.encode(virtualTime, forKey: .virtualTime)
        var additionalPropertiesContainer = encoder.container(keyedBy: String.self)
        try additionalPropertiesContainer.encodeMap(additionalProperties)
    }

    // Decodable protocol methods

    public init(from decoder: Decoder) throws {
        let container = try decoder.container(keyedBy: CodingKeys.self)

        testClockId = try container.decode(String.self, forKey: .testClockId)
        virtualTime = try container.decode(Date.self, forKey: .virtualTime)
        var nonAdditionalPropertyKeys = Set<String>()
        nonAdditionalPropertyKeys.insert("test_clock_id")
        nonAdditionalPropertyKeys.insert("virtual_time")
        let additionalPropertiesContainer = try decoder.container(keyedBy: String.self)
        additionalProperties = try additionalPropertiesContainer.decodeMap(AnyCodable.self, excludedKeys: nonAdditionalPropertyKeys)
    }
}

