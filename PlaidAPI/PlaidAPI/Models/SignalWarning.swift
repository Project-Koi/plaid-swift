//
// SignalWarning.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

/** Conveys information about the errors causing missing or stale bank data used to construct the /signal/evaluate scores and response */
public struct SignalWarning: Codable, JSONEncodable, Hashable {

    /** A broad categorization of the warning. Safe for programmatic use. */
    public var warningType: String?
    /** The warning code identifies a specific kind of warning that pertains to the error causing bank data to be missing. Safe for programmatic use. For more details on warning codes, please refer to Plaid standard error codes documentation. If you receive the `ITEM_LOGIN_REQUIRED` warning, we recommend re-authenticating your user by implementing Link's update mode. This will guide your user to fix their credentials, allowing Plaid to start fetching data again for future Signal requests. */
    public var warningCode: String?
    /** A developer-friendly representation of the warning type. This may change over time and is not safe for programmatic use. */
    public var warningMessage: String?

    public init(warningType: String? = nil, warningCode: String? = nil, warningMessage: String? = nil) {
        self.warningType = warningType
        self.warningCode = warningCode
        self.warningMessage = warningMessage
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case warningType = "warning_type"
        case warningCode = "warning_code"
        case warningMessage = "warning_message"
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(warningType, forKey: .warningType)
        try container.encodeIfPresent(warningCode, forKey: .warningCode)
        try container.encodeIfPresent(warningMessage, forKey: .warningMessage)
    }
}

