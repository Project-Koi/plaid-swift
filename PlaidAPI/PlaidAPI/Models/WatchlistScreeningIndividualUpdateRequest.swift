//
// WatchlistScreeningIndividualUpdateRequest.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

/** Request input for editing an individual watchlist screening */
public struct WatchlistScreeningIndividualUpdateRequest: Codable, JSONEncodable, Hashable {

    static let clientUserIdRule = StringRule(minLength: 1, maxLength: nil, pattern: nil)
    /** ID of the associated screening. */
    public var watchlistScreeningId: String
    public var searchTerms: UpdateIndividualScreeningRequestSearchTerms?
    /** ID of the associated user. */
    public var assignee: String?
    public var status: WatchlistScreeningStatus?
    /** A unique ID that identifies the end user in your system. This ID can also be used to associate user-specific data from other Plaid products. Financial Account Matching requires this field and the `/link/token/create` `client_user_id` to be consistent. Personally identifiable information, such as an email address or phone number, should not be used in the `client_user_id`. */
    public var clientUserId: String?
    /** Your Plaid API `client_id`. The `client_id` is required and may be provided either in the `PLAID-CLIENT-ID` header or as part of a request body. */
    public var clientId: String?
    /** Your Plaid API `secret`. The `secret` is required and may be provided either in the `PLAID-SECRET` header or as part of a request body. */
    public var secret: String?
    /** A list of fields to reset back to null */
    public var resetFields: [WatchlistScreeningIndividualUpdateRequestResettableField]?

    public init(watchlistScreeningId: String, searchTerms: UpdateIndividualScreeningRequestSearchTerms? = nil, assignee: String? = nil, status: WatchlistScreeningStatus? = nil, clientUserId: String? = nil, clientId: String? = nil, secret: String? = nil, resetFields: [WatchlistScreeningIndividualUpdateRequestResettableField]? = nil) {
        self.watchlistScreeningId = watchlistScreeningId
        self.searchTerms = searchTerms
        self.assignee = assignee
        self.status = status
        self.clientUserId = clientUserId
        self.clientId = clientId
        self.secret = secret
        self.resetFields = resetFields
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case watchlistScreeningId = "watchlist_screening_id"
        case searchTerms = "search_terms"
        case assignee
        case status
        case clientUserId = "client_user_id"
        case clientId = "client_id"
        case secret
        case resetFields = "reset_fields"
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encode(watchlistScreeningId, forKey: .watchlistScreeningId)
        try container.encodeIfPresent(searchTerms, forKey: .searchTerms)
        try container.encodeIfPresent(assignee, forKey: .assignee)
        try container.encodeIfPresent(status, forKey: .status)
        try container.encodeIfPresent(clientUserId, forKey: .clientUserId)
        try container.encodeIfPresent(clientId, forKey: .clientId)
        try container.encodeIfPresent(secret, forKey: .secret)
        try container.encodeIfPresent(resetFields, forKey: .resetFields)
    }
}

