//
// DepositSwitchStateUpdateWebhook.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

/** Fired when the status of a deposit switch request has changed. */
public struct DepositSwitchStateUpdateWebhook: Codable, JSONEncodable, Hashable {

    /** `\"DEPOSIT_SWITCH\"` */
    public var webhookType: String?
    /** `\"SWITCH_STATE_UPDATE\"` */
    public var webhookCode: String?
    /**  The state, or status, of the deposit switch.  `initialized`: The deposit switch has been initialized with the user entering the information required to submit the deposit switch request.  `processing`: The deposit switch request has been submitted and is being processed.  `completed`: The user's employer has fulfilled and completed the deposit switch request.  `error`: There was an error processing the deposit switch request.  For more information, see the [Deposit Switch API reference](/docs/deposit-switch/reference#deposit_switchget). */
    public var state: String?
    /** The ID of the deposit switch. */
    public var depositSwitchId: String?
    public var environment: WebhookEnvironmentValues?

    public init(webhookType: String? = nil, webhookCode: String? = nil, state: String? = nil, depositSwitchId: String? = nil, environment: WebhookEnvironmentValues? = nil) {
        self.webhookType = webhookType
        self.webhookCode = webhookCode
        self.state = state
        self.depositSwitchId = depositSwitchId
        self.environment = environment
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case webhookType = "webhook_type"
        case webhookCode = "webhook_code"
        case state
        case depositSwitchId = "deposit_switch_id"
        case environment
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(webhookType, forKey: .webhookType)
        try container.encodeIfPresent(webhookCode, forKey: .webhookCode)
        try container.encodeIfPresent(state, forKey: .state)
        try container.encodeIfPresent(depositSwitchId, forKey: .depositSwitchId)
        try container.encodeIfPresent(environment, forKey: .environment)
    }
}

