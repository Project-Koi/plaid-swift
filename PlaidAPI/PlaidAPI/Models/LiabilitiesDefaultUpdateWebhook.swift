//
// LiabilitiesDefaultUpdateWebhook.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

/** The webhook of type &#x60;LIABILITIES&#x60; and code &#x60;DEFAULT_UPDATE&#x60; will be fired when new or updated liabilities have been detected on a liabilities item. */
public struct LiabilitiesDefaultUpdateWebhook: Codable, JSONEncodable, Hashable {

    /** `LIABILITIES` */
    public var webhookType: String
    /** `DEFAULT_UPDATE` */
    public var webhookCode: String
    /** The `item_id` of the Item associated with this webhook, warning, or error */
    public var itemId: String
    public var error: PlaidError?
    /** An array of `account_id`'s for accounts that contain new liabilities.' */
    public var accountIdsWithNewLiabilities: [String]
    /** An object with keys of `account_id`'s that are mapped to their respective liabilities fields that changed.  Example: `{ \"XMBvvyMGQ1UoLbKByoMqH3nXMj84ALSdE5B58\": [\"past_amount_due\"] }`  */
    public var accountIdsWithUpdatedLiabilities: [String: [String]]
    public var environment: WebhookEnvironmentValues

    public init(webhookType: String, webhookCode: String, itemId: String, error: PlaidError?, accountIdsWithNewLiabilities: [String], accountIdsWithUpdatedLiabilities: [String: [String]], environment: WebhookEnvironmentValues) {
        self.webhookType = webhookType
        self.webhookCode = webhookCode
        self.itemId = itemId
        self.error = error
        self.accountIdsWithNewLiabilities = accountIdsWithNewLiabilities
        self.accountIdsWithUpdatedLiabilities = accountIdsWithUpdatedLiabilities
        self.environment = environment
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case webhookType = "webhook_type"
        case webhookCode = "webhook_code"
        case itemId = "item_id"
        case error
        case accountIdsWithNewLiabilities = "account_ids_with_new_liabilities"
        case accountIdsWithUpdatedLiabilities = "account_ids_with_updated_liabilities"
        case environment
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encode(webhookType, forKey: .webhookType)
        try container.encode(webhookCode, forKey: .webhookCode)
        try container.encode(itemId, forKey: .itemId)
        try container.encode(error, forKey: .error)
        try container.encode(accountIdsWithNewLiabilities, forKey: .accountIdsWithNewLiabilities)
        try container.encode(accountIdsWithUpdatedLiabilities, forKey: .accountIdsWithUpdatedLiabilities)
        try container.encode(environment, forKey: .environment)
    }
}

