//
// AssetOwners.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

/** Documentation not found in the MISMO model viewer and not provided by Freddie Mac. */
public struct AssetOwners: Codable, JSONEncodable, Hashable {

    /** Multiple Occurances of Account Owners Full Name up to 4. */
    public var ASSET_OWNER: [AssetOwner]

    public init(ASSET_OWNER: [AssetOwner]) {
        self.ASSET_OWNER = ASSET_OWNER
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case ASSET_OWNER
    }

    public var additionalProperties: [String: AnyCodable] = [:]

    public subscript(key: String) -> AnyCodable? {
        get {
            if let value = additionalProperties[key] {
                return value
            }
            return nil
        }

        set {
            additionalProperties[key] = newValue
        }
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encode(ASSET_OWNER, forKey: .ASSET_OWNER)
        var additionalPropertiesContainer = encoder.container(keyedBy: String.self)
        try additionalPropertiesContainer.encodeMap(additionalProperties)
    }

    // Decodable protocol methods

    public init(from decoder: Decoder) throws {
        let container = try decoder.container(keyedBy: CodingKeys.self)

        ASSET_OWNER = try container.decode([AssetOwner].self, forKey: .ASSET_OWNER)
        var nonAdditionalPropertyKeys = Set<String>()
        nonAdditionalPropertyKeys.insert("ASSET_OWNER")
        let additionalPropertiesContainer = try decoder.container(keyedBy: String.self)
        additionalProperties = try additionalPropertiesContainer.decodeMap(AnyCodable.self, excludedKeys: nonAdditionalPropertyKeys)
    }
}

