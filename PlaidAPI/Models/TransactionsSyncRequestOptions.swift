//
// TransactionsSyncRequestOptions.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

/** An optional object to be used with the request. If specified, &#x60;options&#x60; must not be &#x60;null&#x60;. */
public struct TransactionsSyncRequestOptions: Codable, JSONEncodable, Hashable {

    static let daysRequestedRule = NumericRule<Int>(minimum: 1, exclusiveMinimum: false, maximum: 730, exclusiveMaximum: false, multipleOf: nil)
    /** Include the raw unparsed transaction description from the financial institution. */
    public var includeOriginalDescription: Bool? = false
    /** Personal finance categories are now returned by default. */
    @available(*, deprecated, message: "This property is deprecated.")
    public var includePersonalFinanceCategory: Bool? = false
    /** Counterparties and extra merchant fields are now returned by default. */
    @available(*, deprecated, message: "This property is deprecated.")
    public var includeLogoAndCounterpartyBeta: Bool? = false
    /** This option only applies to calls for Items that were not initialized with Transactions during Link and are now adding the Transactions product to the Item for the first time. In these cases, this option controls the maximum number of days of transaction history that Plaid will request from the financial institution. For developer accounts created after December 3, 2023, if no value is specified, this will default to 90 days. For developer accounts created on December 3, 2023 or earlier, if no value is specified, this will default to 730 days until June 24, 2024, at which point it will default to 90 days.  If Transactions has already been added to the Item prior to this call, this field will have no effect.  We strongly recommend that customers utilizing [Recurring Transactions](https://plaid.com/docs/api/products/transactions/#transactionsrecurringget) request at least 180 days of history for optimal results. */
    public var daysRequested: Int? = 90

    public init(includeOriginalDescription: Bool? = false, includePersonalFinanceCategory: Bool? = false, includeLogoAndCounterpartyBeta: Bool? = false, daysRequested: Int? = 90) {
        self.includeOriginalDescription = includeOriginalDescription
        self.includePersonalFinanceCategory = includePersonalFinanceCategory
        self.includeLogoAndCounterpartyBeta = includeLogoAndCounterpartyBeta
        self.daysRequested = daysRequested
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case includeOriginalDescription = "include_original_description"
        case includePersonalFinanceCategory = "include_personal_finance_category"
        case includeLogoAndCounterpartyBeta = "include_logo_and_counterparty_beta"
        case daysRequested = "days_requested"
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(includeOriginalDescription, forKey: .includeOriginalDescription)
        try container.encodeIfPresent(includePersonalFinanceCategory, forKey: .includePersonalFinanceCategory)
        try container.encodeIfPresent(includeLogoAndCounterpartyBeta, forKey: .includeLogoAndCounterpartyBeta)
        try container.encodeIfPresent(daysRequested, forKey: .daysRequested)
    }
}

