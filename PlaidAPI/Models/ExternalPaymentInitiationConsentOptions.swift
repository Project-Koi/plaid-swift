//
// ExternalPaymentInitiationConsentOptions.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

/** Additional payment consent options */
public struct ExternalPaymentInitiationConsentOptions: Codable, JSONEncodable, Hashable {

    static let ibanRule = StringRule(minLength: 15, maxLength: 34, pattern: nil)
    /** When `true`, Plaid will attempt to request refund details from the payee's financial institution.  Support varies between financial institutions and will not always be available.  If refund details could be retrieved, they will be available in the `/payment_initiation/payment/get` response. */
    public var requestRefundDetails: Bool?
    /** The International Bank Account Number (IBAN) for the payer's account. Where possible, the end user will be able to set up payment consent using only the specified bank account if provided. */
    public var iban: String?
    public var bacs: PaymentInitiationOptionalRestrictionBacs?

    public init(requestRefundDetails: Bool? = nil, iban: String? = nil, bacs: PaymentInitiationOptionalRestrictionBacs? = nil) {
        self.requestRefundDetails = requestRefundDetails
        self.iban = iban
        self.bacs = bacs
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case requestRefundDetails = "request_refund_details"
        case iban
        case bacs
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(requestRefundDetails, forKey: .requestRefundDetails)
        try container.encodeIfPresent(iban, forKey: .iban)
        try container.encodeIfPresent(bacs, forKey: .bacs)
    }
}

