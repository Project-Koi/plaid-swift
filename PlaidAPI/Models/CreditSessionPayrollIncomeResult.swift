//
// CreditSessionPayrollIncomeResult.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

/** The details of a digital payroll income verification in Link */
public struct CreditSessionPayrollIncomeResult: Codable, JSONEncodable, Hashable {

    /** The number of paystubs retrieved from a payroll provider. */
    public var numPaystubsRetrieved: Int?
    /** The number of w2s retrieved from a payroll provider. */
    public var numW2sRetrieved: Int?
    /** The Plaid Institution ID associated with the Item. */
    public var institutionId: String?
    /** The Institution Name associated with the Item. */
    public var institutionName: String?

    public init(numPaystubsRetrieved: Int? = nil, numW2sRetrieved: Int? = nil, institutionId: String? = nil, institutionName: String? = nil) {
        self.numPaystubsRetrieved = numPaystubsRetrieved
        self.numW2sRetrieved = numW2sRetrieved
        self.institutionId = institutionId
        self.institutionName = institutionName
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case numPaystubsRetrieved = "num_paystubs_retrieved"
        case numW2sRetrieved = "num_w2s_retrieved"
        case institutionId = "institution_id"
        case institutionName = "institution_name"
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(numPaystubsRetrieved, forKey: .numPaystubsRetrieved)
        try container.encodeIfPresent(numW2sRetrieved, forKey: .numW2sRetrieved)
        try container.encodeIfPresent(institutionId, forKey: .institutionId)
        try container.encodeIfPresent(institutionName, forKey: .institutionName)
    }
}

