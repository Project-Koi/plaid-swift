//
// SignalUser.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

/** Details about the end user initiating the transaction (i.e., the account holder). When calling &#x60;/signal/evaluate&#x60; or &#x60;/signal/processor/evaluate&#x60;, this field is optional, but strongly recommended to increase the accuracy of Signal results. */
public struct SignalUser: Codable, JSONEncodable, Hashable {

    public var name: SignalPersonName?
    /** The user's phone number, in E.164 format: +{countrycode}{number}. For example: \"+14151234567\" */
    public var phoneNumber: String?
    /** The user's email address. */
    public var emailAddress: String?
    public var address: SignalAddressData?

    public init(name: SignalPersonName? = nil, phoneNumber: String? = nil, emailAddress: String? = nil, address: SignalAddressData? = nil) {
        self.name = name
        self.phoneNumber = phoneNumber
        self.emailAddress = emailAddress
        self.address = address
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case name
        case phoneNumber = "phone_number"
        case emailAddress = "email_address"
        case address
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(name, forKey: .name)
        try container.encodeIfPresent(phoneNumber, forKey: .phoneNumber)
        try container.encodeIfPresent(emailAddress, forKey: .emailAddress)
        try container.encodeIfPresent(address, forKey: .address)
    }
}

