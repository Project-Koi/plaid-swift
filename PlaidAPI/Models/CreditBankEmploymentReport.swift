//
// CreditBankEmploymentReport.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

/** The report of the Bank Employment data for an end user. */
public struct CreditBankEmploymentReport: Codable, JSONEncodable, Hashable {

    /** The unique identifier associated with the Bank Employment Report. */
    public var bankEmploymentReportId: String
    /** The time when the Bank Employment Report was generated, in [ISO 8601](https://wikipedia.org/wiki/ISO_8601) format (e.g. \"2018-04-12T03:32:11Z\"). */
    public var generatedTime: Date
    /** The number of days requested by the customer for the Bank Employment Report. */
    public var daysRequested: Int
    /** The list of Items in the report along with the associated metadata about the Item. */
    public var items: [CreditBankEmploymentItem]
    /** If data from the Bank Employment report was unable to be retrieved, the warnings will contain information about the error that caused the data to be incomplete. */
    public var warnings: [CreditBankEmploymentWarning]

    public init(bankEmploymentReportId: String, generatedTime: Date, daysRequested: Int, items: [CreditBankEmploymentItem], warnings: [CreditBankEmploymentWarning]) {
        self.bankEmploymentReportId = bankEmploymentReportId
        self.generatedTime = generatedTime
        self.daysRequested = daysRequested
        self.items = items
        self.warnings = warnings
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case bankEmploymentReportId = "bank_employment_report_id"
        case generatedTime = "generated_time"
        case daysRequested = "days_requested"
        case items
        case warnings
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encode(bankEmploymentReportId, forKey: .bankEmploymentReportId)
        try container.encode(generatedTime, forKey: .generatedTime)
        try container.encode(daysRequested, forKey: .daysRequested)
        try container.encode(items, forKey: .items)
        try container.encode(warnings, forKey: .warnings)
    }
}

