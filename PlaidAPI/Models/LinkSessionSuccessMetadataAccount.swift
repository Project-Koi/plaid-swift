//
// LinkSessionSuccessMetadataAccount.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

/** An account attached to the connected Item. */
public struct LinkSessionSuccessMetadataAccount: Codable, JSONEncodable, Hashable {

    /** The Plaid `account_id`  */
    public var id: String?
    /** The official account name */
    public var name: String?
    /** The last 2-4 alphanumeric characters of an account's official account number. Note that the mask may be non-unique between an Item's accounts. It may also not match the mask that the bank displays to the user. */
    public var mask: String?
    /** The account type. See the [Account schema](/docs/api/accounts#account-type-schema) for a full list of possible values */
    public var type: String?
    /** The account subtype. See the [Account schema](/docs/api/accounts#account-type-schema) for a full list of possible values */
    public var subtype: String?
    /** Indicates an Item's micro-deposit-based verification or database verification status. Possible values are:  `pending_automatic_verification`: The Item is pending automatic verification  `pending_manual_verification`: The Item is pending manual micro-deposit verification. Items remain in this state until the user successfully verifies the code.  `automatically_verified`: The Item has successfully been automatically verified  `manually_verified`: The Item has successfully been manually verified  `verification_expired`: Plaid was unable to automatically verify the deposit within 7 calendar days and will no longer attempt to validate the Item. Users may retry by submitting their information again through Link.  `verification_failed`: The Item failed manual micro-deposit verification because the user exhausted all 3 verification attempts. Users may retry by submitting their information again through Link.  `database_matched`: The Item has successfully been verified using Plaid's data sources.  `database_insights_pending`: The Database Insights result is pending and will be available upon Auth request. Note: Database Insights is currently a beta feature, please contact your account manager for more information.  `null`: Neither micro-deposit-based verification nor database verification are being used for the Item.  */
    public var verificationStatus: String?
    /** If micro-deposit verification is being used, indicates whether the account being verified is a `business` or `personal` account. */
    public var classType: String?

    public init(id: String? = nil, name: String? = nil, mask: String? = nil, type: String? = nil, subtype: String? = nil, verificationStatus: String? = nil, classType: String? = nil) {
        self.id = id
        self.name = name
        self.mask = mask
        self.type = type
        self.subtype = subtype
        self.verificationStatus = verificationStatus
        self.classType = classType
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case id
        case name
        case mask
        case type
        case subtype
        case verificationStatus = "verification_status"
        case classType = "class_type"
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(id, forKey: .id)
        try container.encodeIfPresent(name, forKey: .name)
        try container.encodeIfPresent(mask, forKey: .mask)
        try container.encodeIfPresent(type, forKey: .type)
        try container.encodeIfPresent(subtype, forKey: .subtype)
        try container.encodeIfPresent(verificationStatus, forKey: .verificationStatus)
        try container.encodeIfPresent(classType, forKey: .classType)
    }
}

