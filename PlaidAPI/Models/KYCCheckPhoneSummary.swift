//
// KYCCheckPhoneSummary.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

/** Result summary object specifying how the &#x60;phone&#x60; field matched. */
public struct KYCCheckPhoneSummary: Codable, JSONEncodable, Hashable {

    public var summary: MatchSummaryCode
    public var areaCode: MatchSummaryCode

    public init(summary: MatchSummaryCode, areaCode: MatchSummaryCode) {
        self.summary = summary
        self.areaCode = areaCode
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case summary
        case areaCode = "area_code"
    }

    public var additionalProperties: [String: AnyCodable] = [:]

    public subscript(key: String) -> AnyCodable? {
        get {
            if let value = additionalProperties[key] {
                return value
            }
            return nil
        }

        set {
            additionalProperties[key] = newValue
        }
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encode(summary, forKey: .summary)
        try container.encode(areaCode, forKey: .areaCode)
        var additionalPropertiesContainer = encoder.container(keyedBy: String.self)
        try additionalPropertiesContainer.encodeMap(additionalProperties)
    }

    // Decodable protocol methods

    public init(from decoder: Decoder) throws {
        let container = try decoder.container(keyedBy: CodingKeys.self)

        summary = try container.decode(MatchSummaryCode.self, forKey: .summary)
        areaCode = try container.decode(MatchSummaryCode.self, forKey: .areaCode)
        var nonAdditionalPropertyKeys = Set<String>()
        nonAdditionalPropertyKeys.insert("summary")
        nonAdditionalPropertyKeys.insert("area_code")
        let additionalPropertiesContainer = try decoder.container(keyedBy: String.self)
        additionalProperties = try additionalPropertiesContainer.decodeMap(AnyCodable.self, excludedKeys: nonAdditionalPropertyKeys)
    }
}

