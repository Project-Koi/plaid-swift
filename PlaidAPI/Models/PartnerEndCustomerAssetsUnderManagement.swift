//
// PartnerEndCustomerAssetsUnderManagement.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

/** Assets under management for the given end customer. Required for end customers with monthly service commitments. */
public struct PartnerEndCustomerAssetsUnderManagement: Codable, JSONEncodable, Hashable {

    public var amount: Double
    public var isoCurrencyCode: String

    public init(amount: Double, isoCurrencyCode: String) {
        self.amount = amount
        self.isoCurrencyCode = isoCurrencyCode
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case amount
        case isoCurrencyCode = "iso_currency_code"
    }

    public var additionalProperties: [String: AnyCodable] = [:]

    public subscript(key: String) -> AnyCodable? {
        get {
            if let value = additionalProperties[key] {
                return value
            }
            return nil
        }

        set {
            additionalProperties[key] = newValue
        }
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encode(amount, forKey: .amount)
        try container.encode(isoCurrencyCode, forKey: .isoCurrencyCode)
        var additionalPropertiesContainer = encoder.container(keyedBy: String.self)
        try additionalPropertiesContainer.encodeMap(additionalProperties)
    }

    // Decodable protocol methods

    public init(from decoder: Decoder) throws {
        let container = try decoder.container(keyedBy: CodingKeys.self)

        amount = try container.decode(Double.self, forKey: .amount)
        isoCurrencyCode = try container.decode(String.self, forKey: .isoCurrencyCode)
        var nonAdditionalPropertyKeys = Set<String>()
        nonAdditionalPropertyKeys.insert("amount")
        nonAdditionalPropertyKeys.insert("iso_currency_code")
        let additionalPropertiesContainer = try decoder.container(keyedBy: String.self)
        additionalProperties = try additionalPropertiesContainer.decodeMap(AnyCodable.self, excludedKeys: nonAdditionalPropertyKeys)
    }
}

