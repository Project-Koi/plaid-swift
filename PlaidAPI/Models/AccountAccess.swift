//
// AccountAccess.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

/** Allow or disallow product access by account. Unlisted (e.g. missing) accounts will be considered &#x60;new_accounts&#x60;. */
public struct AccountAccess: Codable, JSONEncodable, Hashable {

    /** The unique account identifier for this account. This value must match that returned by the data access API for this account. */
    public var uniqueId: String
    /** Allow the application to see this account (and associated details, including balance) in the list of accounts  If unset, defaults to `true`. */
    public var authorized: Bool? = true
    public var accountProductAccess: AccountProductAccessNullable?

    public init(uniqueId: String, authorized: Bool? = true, accountProductAccess: AccountProductAccessNullable? = nil) {
        self.uniqueId = uniqueId
        self.authorized = authorized
        self.accountProductAccess = accountProductAccess
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case uniqueId = "unique_id"
        case authorized
        case accountProductAccess = "account_product_access"
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encode(uniqueId, forKey: .uniqueId)
        try container.encodeIfPresent(authorized, forKey: .authorized)
        try container.encodeIfPresent(accountProductAccess, forKey: .accountProductAccess)
    }
}

