//
// PaymentInitiationConsentConstraints.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

/** Limitations that will be applied to payments initiated using the payment consent. */
public struct PaymentInitiationConsentConstraints: Codable, JSONEncodable, Hashable {

    public var validDateTime: PaymentConsentValidDateTime?
    public var maxPaymentAmount: PaymentConsentMaxPaymentAmount
    /** A list of amount limitations per period of time. */
    public var periodicAmounts: [PaymentConsentPeriodicAmount]

    public init(validDateTime: PaymentConsentValidDateTime? = nil, maxPaymentAmount: PaymentConsentMaxPaymentAmount, periodicAmounts: [PaymentConsentPeriodicAmount]) {
        self.validDateTime = validDateTime
        self.maxPaymentAmount = maxPaymentAmount
        self.periodicAmounts = periodicAmounts
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case validDateTime = "valid_date_time"
        case maxPaymentAmount = "max_payment_amount"
        case periodicAmounts = "periodic_amounts"
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(validDateTime, forKey: .validDateTime)
        try container.encode(maxPaymentAmount, forKey: .maxPaymentAmount)
        try container.encode(periodicAmounts, forKey: .periodicAmounts)
    }
}

