//
// BeaconAccountRiskEvaluateAccountAttributes.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

/** The attributes object contains data that can be used to assess account risk. Examples of data include: &#x60;days_since_first_plaid_connection&#x60;: The number of days since the first time the Item was connected to an application via Plaid &#x60;plaid_connections_count_7d&#x60;: The number of times the Item has been connected to applications via Plaid over the past 7 days &#x60;plaid_connections_count_30d&#x60;: The number of times the Item has been connected to applications via Plaid over the past 30 days &#x60;total_plaid_connections_count&#x60;: The number of times the Item has been connected to applications via Plaid For the full list and detailed documentation of core attributes available, or to request that core attributes not be returned, contact Sales or your Plaid account manager */
public struct BeaconAccountRiskEvaluateAccountAttributes: Codable, JSONEncodable, Hashable {

    /** The number of days since the first time the Item was connected to an application via Plaid */
    public var daysSinceFirstPlaidConnection: Int?
    /** Indicates if the account has been closed by the financial institution or the consumer, or is at risk of being closed */
    public var isAccountClosed: Bool?
    /** Indicates whether the account has withdrawals and transfers disabled or if access to the account is restricted. This could be due to a freeze by the credit issuer, legal restrictions (e.g., sanctions), or regulatory requirements limiting monthly withdrawals, among other reasons */
    public var isAccountFrozenOrRestricted: Bool?
    /** The total number of times the item has been connected to applications via Plaid */
    public var totalPlaidConnectionsCount: Int?
    /** The number of times the Item has been connected to applications via Plaid over the past 7 days */
    public var plaidConnectionsCount7d: Int?
    /** The number of times the Item has been connected to applications via Plaid over the past 30 days */
    public var plaidConnectionsCount30d: Int?
    /** The number of failed non-OAuth authentication attempts via Plaid for this bank account over the past 3 days */
    public var failedPlaidNonOauthAuthenticationAttemptsCount3d: Int?
    /** The number of non-OAuth authentication attempts via Plaid for this bank account over the past 3 days */
    public var plaidNonOauthAuthenticationAttemptsCount3d: Int?
    /** The number of failed non-OAuth authentication attempts via Plaid for this bank account over the past 7 days */
    public var failedPlaidNonOauthAuthenticationAttemptsCount7d: Int?
    /** The number of non-OAuth authentication attempts via Plaid for this bank account over the past 7 days */
    public var plaidNonOauthAuthenticationAttemptsCount7d: Int?
    /** The number of failed non-OAuth authentication attempts via Plaid for this bank account over the past 30 days */
    public var failedPlaidNonOauthAuthenticationAttemptsCount30d: Int?
    /** The number of non-OAuth authentication attempts via Plaid for this bank account over the past 30 days */
    public var plaidNonOauthAuthenticationAttemptsCount30d: Int?
    /** The number of distinct IP addresses linked to the same bank account during Plaid authentication in the last 3 days */
    public var distinctIpAddressesCount3d: Int?
    /** The number of distinct IP addresses linked to the same bank account during Plaid authentication in the last 7 days */
    public var distinctIpAddressesCount7d: Int?
    /** The number of distinct IP addresses linked to the same bank account during Plaid authentication in the last 30 days */
    public var distinctIpAddressesCount30d: Int?
    /** The number of distinct IP addresses linked to the same bank account during Plaid authentication in the last 90 days */
    public var distinctIpAddressesCount90d: Int?
    /** The number of distinct user agents linked to the same bank account during Plaid authentication in the last 3 days */
    public var distinctUserAgentsCount3d: Int?
    /** The number of distinct user agents linked to the same bank account during Plaid authentication in the last 7 days */
    public var distinctUserAgentsCount7d: Int?
    /** The number of distinct user agents linked to the same bank account during Plaid authentication in the last 30 days */
    public var distinctUserAgentsCount30d: Int?
    /** The number of distinct user agents linked to the same bank account during Plaid authentication in the last 90 days */
    public var distinctUserAgentsCount90d: Int?
    /** The number of times the account's addresses on file have changed over the past 28 days */
    public var addressChangeCount28d: Int?
    /** The number of times the account's email addresses on file have changed over the past 28 days */
    public var emailChangeCount28d: Int?
    /** The number of times the account's phone numbers on file have changed over the past 28 days */
    public var phoneChangeCount28d: Int?
    /** The number of times the account's addresses on file have changed over the past 90 days */
    public var addressChangeCount90d: Int?
    /** The number of times the account's email addresses on file have changed over the past 90 days */
    public var emailChangeCount90d: Int?
    /** The number of times the account's phone numbers on file have changed over the past 90 days */
    public var phoneChangeCount90d: Int?
    /** The number of days since the bank account was opened, as reported by the financial institution */
    public var daysSinceAccountOpening: Int?

    public init(daysSinceFirstPlaidConnection: Int? = nil, isAccountClosed: Bool? = nil, isAccountFrozenOrRestricted: Bool? = nil, totalPlaidConnectionsCount: Int? = nil, plaidConnectionsCount7d: Int? = nil, plaidConnectionsCount30d: Int? = nil, failedPlaidNonOauthAuthenticationAttemptsCount3d: Int? = nil, plaidNonOauthAuthenticationAttemptsCount3d: Int? = nil, failedPlaidNonOauthAuthenticationAttemptsCount7d: Int? = nil, plaidNonOauthAuthenticationAttemptsCount7d: Int? = nil, failedPlaidNonOauthAuthenticationAttemptsCount30d: Int? = nil, plaidNonOauthAuthenticationAttemptsCount30d: Int? = nil, distinctIpAddressesCount3d: Int? = nil, distinctIpAddressesCount7d: Int? = nil, distinctIpAddressesCount30d: Int? = nil, distinctIpAddressesCount90d: Int? = nil, distinctUserAgentsCount3d: Int? = nil, distinctUserAgentsCount7d: Int? = nil, distinctUserAgentsCount30d: Int? = nil, distinctUserAgentsCount90d: Int? = nil, addressChangeCount28d: Int? = nil, emailChangeCount28d: Int? = nil, phoneChangeCount28d: Int? = nil, addressChangeCount90d: Int? = nil, emailChangeCount90d: Int? = nil, phoneChangeCount90d: Int? = nil, daysSinceAccountOpening: Int? = nil) {
        self.daysSinceFirstPlaidConnection = daysSinceFirstPlaidConnection
        self.isAccountClosed = isAccountClosed
        self.isAccountFrozenOrRestricted = isAccountFrozenOrRestricted
        self.totalPlaidConnectionsCount = totalPlaidConnectionsCount
        self.plaidConnectionsCount7d = plaidConnectionsCount7d
        self.plaidConnectionsCount30d = plaidConnectionsCount30d
        self.failedPlaidNonOauthAuthenticationAttemptsCount3d = failedPlaidNonOauthAuthenticationAttemptsCount3d
        self.plaidNonOauthAuthenticationAttemptsCount3d = plaidNonOauthAuthenticationAttemptsCount3d
        self.failedPlaidNonOauthAuthenticationAttemptsCount7d = failedPlaidNonOauthAuthenticationAttemptsCount7d
        self.plaidNonOauthAuthenticationAttemptsCount7d = plaidNonOauthAuthenticationAttemptsCount7d
        self.failedPlaidNonOauthAuthenticationAttemptsCount30d = failedPlaidNonOauthAuthenticationAttemptsCount30d
        self.plaidNonOauthAuthenticationAttemptsCount30d = plaidNonOauthAuthenticationAttemptsCount30d
        self.distinctIpAddressesCount3d = distinctIpAddressesCount3d
        self.distinctIpAddressesCount7d = distinctIpAddressesCount7d
        self.distinctIpAddressesCount30d = distinctIpAddressesCount30d
        self.distinctIpAddressesCount90d = distinctIpAddressesCount90d
        self.distinctUserAgentsCount3d = distinctUserAgentsCount3d
        self.distinctUserAgentsCount7d = distinctUserAgentsCount7d
        self.distinctUserAgentsCount30d = distinctUserAgentsCount30d
        self.distinctUserAgentsCount90d = distinctUserAgentsCount90d
        self.addressChangeCount28d = addressChangeCount28d
        self.emailChangeCount28d = emailChangeCount28d
        self.phoneChangeCount28d = phoneChangeCount28d
        self.addressChangeCount90d = addressChangeCount90d
        self.emailChangeCount90d = emailChangeCount90d
        self.phoneChangeCount90d = phoneChangeCount90d
        self.daysSinceAccountOpening = daysSinceAccountOpening
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case daysSinceFirstPlaidConnection = "days_since_first_plaid_connection"
        case isAccountClosed = "is_account_closed"
        case isAccountFrozenOrRestricted = "is_account_frozen_or_restricted"
        case totalPlaidConnectionsCount = "total_plaid_connections_count"
        case plaidConnectionsCount7d = "plaid_connections_count_7d"
        case plaidConnectionsCount30d = "plaid_connections_count_30d"
        case failedPlaidNonOauthAuthenticationAttemptsCount3d = "failed_plaid_non_oauth_authentication_attempts_count_3d"
        case plaidNonOauthAuthenticationAttemptsCount3d = "plaid_non_oauth_authentication_attempts_count_3d"
        case failedPlaidNonOauthAuthenticationAttemptsCount7d = "failed_plaid_non_oauth_authentication_attempts_count_7d"
        case plaidNonOauthAuthenticationAttemptsCount7d = "plaid_non_oauth_authentication_attempts_count_7d"
        case failedPlaidNonOauthAuthenticationAttemptsCount30d = "failed_plaid_non_oauth_authentication_attempts_count_30d"
        case plaidNonOauthAuthenticationAttemptsCount30d = "plaid_non_oauth_authentication_attempts_count_30d"
        case distinctIpAddressesCount3d = "distinct_ip_addresses_count_3d"
        case distinctIpAddressesCount7d = "distinct_ip_addresses_count_7d"
        case distinctIpAddressesCount30d = "distinct_ip_addresses_count_30d"
        case distinctIpAddressesCount90d = "distinct_ip_addresses_count_90d"
        case distinctUserAgentsCount3d = "distinct_user_agents_count_3d"
        case distinctUserAgentsCount7d = "distinct_user_agents_count_7d"
        case distinctUserAgentsCount30d = "distinct_user_agents_count_30d"
        case distinctUserAgentsCount90d = "distinct_user_agents_count_90d"
        case addressChangeCount28d = "address_change_count_28d"
        case emailChangeCount28d = "email_change_count_28d"
        case phoneChangeCount28d = "phone_change_count_28d"
        case addressChangeCount90d = "address_change_count_90d"
        case emailChangeCount90d = "email_change_count_90d"
        case phoneChangeCount90d = "phone_change_count_90d"
        case daysSinceAccountOpening = "days_since_account_opening"
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(daysSinceFirstPlaidConnection, forKey: .daysSinceFirstPlaidConnection)
        try container.encodeIfPresent(isAccountClosed, forKey: .isAccountClosed)
        try container.encodeIfPresent(isAccountFrozenOrRestricted, forKey: .isAccountFrozenOrRestricted)
        try container.encodeIfPresent(totalPlaidConnectionsCount, forKey: .totalPlaidConnectionsCount)
        try container.encodeIfPresent(plaidConnectionsCount7d, forKey: .plaidConnectionsCount7d)
        try container.encodeIfPresent(plaidConnectionsCount30d, forKey: .plaidConnectionsCount30d)
        try container.encodeIfPresent(failedPlaidNonOauthAuthenticationAttemptsCount3d, forKey: .failedPlaidNonOauthAuthenticationAttemptsCount3d)
        try container.encodeIfPresent(plaidNonOauthAuthenticationAttemptsCount3d, forKey: .plaidNonOauthAuthenticationAttemptsCount3d)
        try container.encodeIfPresent(failedPlaidNonOauthAuthenticationAttemptsCount7d, forKey: .failedPlaidNonOauthAuthenticationAttemptsCount7d)
        try container.encodeIfPresent(plaidNonOauthAuthenticationAttemptsCount7d, forKey: .plaidNonOauthAuthenticationAttemptsCount7d)
        try container.encodeIfPresent(failedPlaidNonOauthAuthenticationAttemptsCount30d, forKey: .failedPlaidNonOauthAuthenticationAttemptsCount30d)
        try container.encodeIfPresent(plaidNonOauthAuthenticationAttemptsCount30d, forKey: .plaidNonOauthAuthenticationAttemptsCount30d)
        try container.encodeIfPresent(distinctIpAddressesCount3d, forKey: .distinctIpAddressesCount3d)
        try container.encodeIfPresent(distinctIpAddressesCount7d, forKey: .distinctIpAddressesCount7d)
        try container.encodeIfPresent(distinctIpAddressesCount30d, forKey: .distinctIpAddressesCount30d)
        try container.encodeIfPresent(distinctIpAddressesCount90d, forKey: .distinctIpAddressesCount90d)
        try container.encodeIfPresent(distinctUserAgentsCount3d, forKey: .distinctUserAgentsCount3d)
        try container.encodeIfPresent(distinctUserAgentsCount7d, forKey: .distinctUserAgentsCount7d)
        try container.encodeIfPresent(distinctUserAgentsCount30d, forKey: .distinctUserAgentsCount30d)
        try container.encodeIfPresent(distinctUserAgentsCount90d, forKey: .distinctUserAgentsCount90d)
        try container.encodeIfPresent(addressChangeCount28d, forKey: .addressChangeCount28d)
        try container.encodeIfPresent(emailChangeCount28d, forKey: .emailChangeCount28d)
        try container.encodeIfPresent(phoneChangeCount28d, forKey: .phoneChangeCount28d)
        try container.encodeIfPresent(addressChangeCount90d, forKey: .addressChangeCount90d)
        try container.encodeIfPresent(emailChangeCount90d, forKey: .emailChangeCount90d)
        try container.encodeIfPresent(phoneChangeCount90d, forKey: .phoneChangeCount90d)
        try container.encodeIfPresent(daysSinceAccountOpening, forKey: .daysSinceAccountOpening)
    }
}

