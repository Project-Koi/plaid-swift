//
// ProcessorTokenCreateRequest.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

/** ProcessorTokenCreateRequest defines the request schema for &#x60;/processor/token/create&#x60; */
public struct ProcessorTokenCreateRequest: Codable, JSONEncodable, Hashable {

    public enum Processor: String, Codable, CaseIterable {
        case dwolla = "dwolla"
        case galileo = "galileo"
        case modernTreasury = "modern_treasury"
        case ocrolus = "ocrolus"
        case vesta = "vesta"
        case drivewealth = "drivewealth"
        case vopay = "vopay"
        case achq = "achq"
        case check = "check"
        case checkbook = "checkbook"
        case circle = "circle"
        case silaMoney = "sila_money"
        case rize = "rize"
        case svbApi = "svb_api"
        case unit = "unit"
        case wyre = "wyre"
        case lithic = "lithic"
        case alpaca = "alpaca"
        case astra = "astra"
        case moov = "moov"
        case treasuryPrime = "treasury_prime"
        case marqeta = "marqeta"
        case checkout = "checkout"
        case solid = "solid"
        case highnote = "highnote"
        case gemini = "gemini"
        case apexClearing = "apex_clearing"
        case gusto = "gusto"
        case adyen = "adyen"
        case atomic = "atomic"
        case i2c = "i2c"
        case wepay = "wepay"
        case riskified = "riskified"
        case utb = "utb"
        case adpRoll = "adp_roll"
        case fortressTrust = "fortress_trust"
        case bond = "bond"
        case bakkt = "bakkt"
        case teal = "teal"
        case zeroHash = "zero_hash"
        case tabaPay = "taba_pay"
        case knot = "knot"
        case sardine = "sardine"
        case alloy = "alloy"
        case finix = "finix"
    }
    /** Your Plaid API `client_id`. The `client_id` is required and may be provided either in the `PLAID-CLIENT-ID` header or as part of a request body. */
    public var clientId: String?
    /** Your Plaid API `secret`. The `secret` is required and may be provided either in the `PLAID-SECRET` header or as part of a request body. */
    public var secret: String?
    /** The access token associated with the Item data is being requested for. */
    public var accessToken: String
    /** The `account_id` value obtained from the `onSuccess` callback in Link */
    public var accountId: String
    /** The processor you are integrating with. */
    public var processor: Processor

    public init(clientId: String? = nil, secret: String? = nil, accessToken: String, accountId: String, processor: Processor) {
        self.clientId = clientId
        self.secret = secret
        self.accessToken = accessToken
        self.accountId = accountId
        self.processor = processor
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case clientId = "client_id"
        case secret
        case accessToken = "access_token"
        case accountId = "account_id"
        case processor
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(clientId, forKey: .clientId)
        try container.encodeIfPresent(secret, forKey: .secret)
        try container.encode(accessToken, forKey: .accessToken)
        try container.encode(accountId, forKey: .accountId)
        try container.encode(processor, forKey: .processor)
    }
}

